-- Drop previous sequence & table
DROP SEQUENCE SEQ_MEMO_CODE;
DROP SEQUENCE SEQ_REPLY_CODE;

DROP TABLE TBL_MEMO CASCADE CONSTRAINTS;
DROP TABLE TBL_REPLY CASCADE CONSTRAINTS;

-- Create sequence
CREATE SEQUENCE SEQ_MEMO_CODE;
CREATE SEQUENCE SEQ_REPLY_CODE;

-- Create Memo table

CREATE TABLE TBL_MEMO
(
    MEMO_CODE NUMBER,
    MEMO_TITLE VARCHAR(100) CONSTRAINT NN_MEMO_TITLE NOT NULL,
    MEMO_CONTENT LONG CONSTRAINT NN_MEMO_CONTENT NOT NULL,
    MEMO_CREATE_DATE DATE CONSTRAINT NN_MEMO_CREATE_DATE NOT NULL,
    MEMO_STATE CHAR(1) NOT NULL
);

CREATE UNIQUE INDEX INDEX_MEMO_CODE ON TBL_MEMO
(MEMO_CODE);

ALTER TABLE TBL_MEMO
    ADD CONSTRAINT PK_MEMO_CODE PRIMARY KEY(MEMO_CODE)
    USING INDEX INDEX_MEMO_CODE;

COMMENT ON COLUMN TBL_MEMO.MEMO_CODE IS '메모 코드';    
COMMENT ON COLUMN TBL_MEMO.MEMO_TITLE IS '메모 제목';
COMMENT ON COLUMN TBL_MEMO.MEMO_CONTENT IS '메모 내용';
COMMENT ON COLUMN TBL_MEMO.MEMO_CREATE_DATE IS '메모 작성일자';
COMMENT ON COLUMN TBL_MEMO.MEMO_STATE IS '메모 상태';
COMMENT ON TABLE TBL_MEMO IS '메모';

    
-- Create Reply table

CREATE TABLE TBL_REPLY
(
    REPLY_CODE NUMBER,
    REPLY_AUTHOR VARCHAR(20) NOT NULL,
    REPLY_CONTENT LONG NOT NULL,
    REPLY_CREATE_DATE DATE,
    REPLY_STATE CHAR(1) NOT NULL,
    MEMO_CODE NUMBER
);

CREATE UNIQUE INDEX INDEX_REPLY_CODE ON TBL_REPLY
(REPLY_CODE);

ALTER TABLE TBL_REPLY
    ADD CONSTRAINT PK_REPLY_CODE PRIMARY KEY(REPLY_CODE)
    USING INDEX INDEX_REPLY_CODE;

ALTER TABLE TBL_REPLY
    ADD CONSTRAINT FK_MEMO_CODE FOREIGN KEY (MEMO_CODE)
    REFERENCES TBL_MEMO (MEMO_CODE);

COMMENT ON COLUMN TBL_REPLY.REPLY_CODE IS '댓글 코드';
COMMENT ON COLUMN TBL_REPLY.REPLY_AUTHOR IS '댓글 작성자';
COMMENT ON COLUMN TBL_REPLY.REPLY_CONTENT IS '댓글 내용';
COMMENT ON COLUMN TBL_REPLY.REPLY_CREATE_DATE IS '댓글 작성일자';
COMMENT ON COLUMN TBL_REPLY.REPLY_STATE IS '댓글 상태';
COMMENT ON COLUMN TBL_REPLY.MEMO_CODE IS '메모 코드';
COMMENT ON TABLE TBL_REPLY IS '댓글';

-- Sample Data

INSERT INTO TBL_MEMO VALUES (SEQ_MEMO_CODE.NEXTVAL, 'hoiae의 재림?', 'hoiae가 nodejs에서 springboot환경으로 넘어오는데 성공하였습니다.', SYSDATE, 'Y'); 
INSERT INTO TBL_MEMO VALUES (SEQ_MEMO_CODE.NEXTVAL, '추석 과제 관련 메모', '추석에 과제가 너무 많은 것 같다.', SYSDATE, 'Y');

INSERT INTO TBL_REPLY VALUES (SEQ_REPLY_CODE.NEXTVAL, '최재혁', '호이에의 저작권을 김대연님에게 넘겼습니다.', SYSDATE, 'Y', 1);
INSERT INTO TBL_REPLY VALUES (SEQ_REPLY_CODE.NEXTVAL, '김대연', '감사합니다 재혁님.', SYSDATE, 'Y', 1);

INSERT INTO TBL_REPLY VALUES (SEQ_REPLY_CODE.NEXTVAL, '최재혁', '동감입니다.', SYSDATE, 'Y', 2);
    
--INSERT INTO TBL_USER VALUES (SEQ_USER_CODE.NEXTVAL, '김대연', 'Y');
--INSERT INTO TBL_USER VALUES (SEQ_USER_CODE.NEXTVAL, '이정은', 'Y');
--
--INSERT INTO TBL_ARTICLE VALUES(SEQ_ARTICLE_CODE.NEXTVAL, '자바', '서버를 구현할때 사용할 예정입니다.', SYSDATE ,'Y',1);
--INSERT INTO TBL_ARTICLE VALUES(SEQ_ARTICLE_CODE.NEXTVAL, '자바스크립트', '프론트를 구현할때 사용할 예정입니다.', SYSDATE ,'Y',1);
--
--INSERT INTO TBL_ARTICLE VALUES(SEQ_ARTICLE_CODE.NEXTVAL, '노동법', '노동에 관련된 문서입니다.', SYSDATE ,'Y',2);
--INSERT INTO TBL_ARTICLE VALUES(SEQ_ARTICLE_CODE.NEXTVAL, '회사법', '회사에 관련된 문서입니다.', SYSDATE ,'Y',2);
--
COMMIT;